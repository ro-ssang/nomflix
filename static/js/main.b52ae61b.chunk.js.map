{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.jsx","Components/Loading.jsx","Components/Message.jsx","Components/Poster.jsx","Routes/Home/HomePresenter.jsx","api.js","Routes/Home/index.jsx","Routes/Home/HomeContainer.jsx","Routes/Search/SearchPresenter.jsx","Routes/Search/index.jsx","Routes/Search/SearchContainer.jsx","Routes/TV/TVPresenter.jsx","Routes/TV/index.jsx","Routes/TV/TVContainer.jsx","Routes/Detail/DetailPresenter.jsx","Routes/Detail/index.jsx","Routes/Detail/DetailContainer.jsx","Components/Header.jsx","Components/Router.jsx","Components/GlobalStyles.jsx","Components/App.jsx","index.jsx"],"names":["Container","styled","section","Title","h2","Grid","div","Section","children","title","Loading","role","aria-label","Text","span","props","color","Message","text","Image","img","Rating","ImageContainer","Year","Poster","id","imgUrl","year","rating","isMovie","to","src","require","default","alt","main","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","length","map","movie","poster_path","release_date","substring","vote_average","api","axios","create","baseURL","params","api_key","language","tvApi","get","term","query","encodeURIComponent","append_to_response","moviesApi","HomeContainer","state","a","data","results","this","setState","Component","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSumbit","updateTerm","onSubmit","type","value","placeholder","onChange","show","name","first_air_date","SearchContainer","event","preventDefault","searchByTerm","target","TVPresenter","airingToday","topRated","TVContainer","Backdrop","bgUrl","Content","Cover","Info","Description","p","List","ul","ListItem","li","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","pathname","location","includes","push","history","match","parsedId","parseInt","isNaN","SHeader","header","NavList","NavItem","SLink","Link","$current","withRouter","Router","path","exact","component","Home","Search","Tv","Detail","from","GlobalStyles","createGlobalStyle","reset","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b52ae61b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPosterSmall.ea2ad102.png\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.section`\r\n  &:not(:last-child) {\r\n    margin-bottom: 36px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 18px;\r\n  font-size: 24px;\r\n  font-weight: 700;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, 250px);\r\n  column-gap: 18px;\r\n  row-gap: 24px;\r\n`;\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      <Grid>{children}</Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 60px;\r\n  width: 100%;\r\n  height: 100%;\r\n  font-size: 30px;\r\n`;\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Container>\r\n      <span role=\"img\" aria-label=\"Loading\">\r\n        ⏰\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-size: 24px;\r\n`;\r\n\r\nconst Message = ({ color, text }) => {\r\n  return (\r\n    <Container>\r\n      <Text color={color}>{text}</Text>\r\n    </Container>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  color: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Image = styled.img`\r\n  width: 250px;\r\n  height: 350px;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  position: absolute;\r\n  right: 18px;\r\n  bottom: 18px;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  overflow: hidden;\r\n  display: block;\r\n  margin: 8px 0;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  color: rgba(255, 255, 255, 0.4);\r\n`;\r\n\r\nconst Poster = ({ id, imgUrl, title, year, rating, isMovie = false }) => {\r\n  return (\r\n    <Container>\r\n      <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n        <ImageContainer>\r\n          <Image\r\n            src={imgUrl ? `https://image.tmdb.org/t/p/w300${imgUrl}` : require('assets/noPosterSmall.png').default}\r\n            alt={title}\r\n          />\r\n          <Rating>\r\n            <span role=\"img\" aria-label=\"rating\">\r\n              ⭐\r\n            </span>{' '}\r\n            {rating}/10\r\n          </Rating>\r\n        </ImageContainer>\r\n        <Title>{title}</Title>\r\n        <Year>{year}</Year>\r\n      </Link>\r\n    </Container>\r\n  );\r\n};\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imgUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  year: PropTypes.string,\r\n  rating: PropTypes.number,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport Section from 'Components/Section';\r\nimport Loading from 'Components/Loading';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.main`\r\n  padding: 0 30px;\r\n  margin-top: 80px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => {\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | Nomflix</title>\r\n        </Helmet>\r\n        <Loading />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imgUrl={movie.poster_path}\r\n              title={movie.title}\r\n              year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              rating={movie.vote_average}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular\">\r\n          {popular.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imgUrl={movie.poster_path}\r\n              title={movie.title}\r\n              year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              rating={movie.vote_average}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Upcoming\">\r\n          {upcoming.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imgUrl={movie.poster_path}\r\n              title={movie.title}\r\n              year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              rating={movie.vote_average}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#c0392b\" text={error} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3/',\r\n  params: {\r\n    api_key: 'b9fa4142eb69f9a6ca71110bed2e903e',\r\n    language: 'en-US',\r\n  },\r\n});\r\n\r\nexport const tvApi = {\r\n  airingToday: () => api.get('tv/airing_today'),\r\n  topRated: () => api.get('tv/top_rated'),\r\n  popular: () => api.get('tv/popular'),\r\n  search: (term) => api.get('search/tv', { params: { query: encodeURIComponent(term) } }),\r\n  showDetail: (id) => api.get(`tv/${id}`, { params: { append_to_response: 'video' } }),\r\n};\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get('movie/now_playing'),\r\n  upcoming: () => api.get('movie/upcoming'),\r\n  popular: () => api.get('movie/popular'),\r\n  search: (term) => api.get('search/movie', { params: { query: encodeURIComponent(term) } }),\r\n  movieDetail: (id) => api.get(`movie/${id}`, { params: { append_to_response: 'video' } }),\r\n};\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;\r\n","import React, { Component } from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { moviesApi } from 'api';\r\n\r\nclass HomeContainer extends Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({ nowPlaying, upcoming, popular });\r\n    } catch {\r\n      this.setState({ error: \"Can't find movie information\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n\r\n    return (\r\n      <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport Loading from 'Components/Loading';\r\nimport Section from 'Components/Section';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.main`\r\n  padding: 0 30px;\r\n  margin-top: 80px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 100%;\r\n  background-color: transparent;\r\n  border: none;\r\n  color: #fff;\r\n  font-size: 24px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, error, loading, handleSumbit, updateTerm }) => {\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | Nomflix</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSumbit}>\r\n        <Input type=\"text\" value={searchTerm} placeholder=\"Search Movies or TV Shows...\" onChange={updateTerm} />\r\n      </Form>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imgUrl={movie.poster_path}\r\n                  title={movie.title}\r\n                  year={movie.release_date && movie.release_date.substring(0, 4)}\r\n                  rating={movie.vote_average}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Show Results\">\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  key={show.id}\r\n                  id={show.id}\r\n                  imgUrl={show.poster_path}\r\n                  title={show.name}\r\n                  year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n                  rating={show.vote_average}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n        </>\r\n      )}\r\n      {error && <Message color=\"#95a5a6\" text={error} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;\r\n","import React, { Component } from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { moviesApi, tvApi } from 'api';\r\n\r\nclass SearchContainer extends Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: '',\r\n    error: null,\r\n    loading: false,\r\n  };\r\n\r\n  handleSumbit = (event) => {\r\n    event.preventDefault();\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm) {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n\r\n  updateTerm = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({ movieResults, tvResults });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, error, loading } = this.state;\r\n\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        error={error}\r\n        loading={loading}\r\n        handleSumbit={this.handleSumbit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchContainer;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport Section from 'Components/Section';\r\nimport Loading from 'Components/Loading';\r\nimport Message from 'Components/Message';\r\nimport Poster from 'Components/Poster';\r\n\r\nconst Container = styled.main`\r\n  padding: 0 30px;\r\n  margin-top: 80px;\r\n`;\r\n\r\nconst TVPresenter = ({ airingToday, topRated, popular, error, loading }) => {\r\n  if (loading) {\r\n    return (\r\n      <Container>\r\n        <Helmet>\r\n          <title>TV Shows | Nomflix</title>\r\n        </Helmet>\r\n        <Loading />\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated Shows\">\r\n          {topRated.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imgUrl={show.poster_path}\r\n              title={show.name}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n              rating={show.vote_average}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imgUrl={show.poster_path}\r\n              title={show.name}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n              rating={show.vote_average}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n          {airingToday.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imgUrl={show.poster_path}\r\n              title={show.name}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n              rating={show.vote_average}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#c0392b\" text={error} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nTVPresenter.propTypes = {\r\n  airingToday: PropTypes.array,\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;\r\n","import React, { Component } from 'react';\r\nimport TVPresenter from './TVPresenter';\r\nimport { tvApi } from 'api';\r\n\r\nclass TVContainer extends Component {\r\n  state = {\r\n    airingToday: null,\r\n    topRated: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      this.setState({ airingToday, topRated, popular });\r\n    } catch {\r\n      this.setState({ error: \"Can't find TV information\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { airingToday, topRated, popular, error, loading } = this.state;\r\n\r\n    return (\r\n      <TVPresenter airingToday={airingToday} topRated={topRated} popular={popular} error={error} loading={loading} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TVContainer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport Loading from 'Components/Loading';\r\nimport { Helmet } from 'react-helmet';\r\nimport Message from 'Components/Message';\r\n\r\nconst Container = styled.main`\r\n  position: relative;\r\n  margin-top: 50px;\r\n  height: calc(100vh - 50px);\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: calc(100vh - 50px);\r\n  background-image: url(${(props) => props.bgUrl});\r\n  background-position: center;\r\n  background-size: cover;\r\n  opacity: 0.3;\r\n  filter: blur(2px);\r\n  z-index: -1;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  padding: 90px;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.img`\r\n  flex: 1;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Info = styled.div`\r\n  flex: 4;\r\n  margin-left: 60px;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin-bottom: 12px;\r\n  font-size: 32px;\r\n  font-weight: 700;\r\n  letter-spacing: 1px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  font-size: 18px;\r\n  letter-spacing: 0.5px;\r\n  line-height: 1.5;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  position: relative;\r\n  color: rgba(255, 255, 255, 0.6);\r\n  font-size: 16px;\r\n  &:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n  &:not(:last-child)::after {\r\n    content: '';\r\n    position: absolute;\r\n    right: -12px;\r\n    top: 7px;\r\n    width: 4px;\r\n    height: 4px;\r\n    background-color: rgba(255, 255, 255, 0.6);\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) => {\r\n  return (\r\n    <Container>\r\n      {result && (\r\n        <>\r\n          <Helmet>\r\n            <title>{result.title ? result.title : result.name} | Nomflix</title>\r\n          </Helmet>\r\n          <Backdrop\r\n            bgUrl={\r\n              result.backdrop_path\r\n                ? `https://image.tmdb.org/t/p/original${result.backdrop_path}`\r\n                : require('assets/noPosterSmall.png').default\r\n            }\r\n          />\r\n          <Content>\r\n            <Cover\r\n              src={\r\n                result.poster_path\r\n                  ? `https://image.tmdb.org/t/p/w500${result.poster_path}`\r\n                  : require('assets/noPosterSmall.png').default\r\n              }\r\n              alt={result.title ? result.title : result.name}\r\n            />\r\n            <Info>\r\n              <Title>{result.title || result.name}</Title>\r\n              <List>\r\n                <ListItem>\r\n                  {result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}\r\n                </ListItem>\r\n                <ListItem>{result.runtime ? `${result.runtime} min` : `${result.episode_run_time[0]} min`}</ListItem>\r\n                <ListItem>\r\n                  {result.genres.map((genre, index) =>\r\n                    index !== result.genres.length - 1 ? <span>{genre.name} / </span> : <span>{genre.name}</span>\r\n                  )}\r\n                </ListItem>\r\n              </List>\r\n              <Description>{result.overview}</Description>\r\n            </Info>\r\n          </Content>\r\n        </>\r\n      )}\r\n      {loading && (\r\n        <>\r\n          <Helmet>\r\n            <title>Loading | Nomflix</title>\r\n          </Helmet>\r\n          <Loading />\r\n        </>\r\n      )}\r\n      {error && <Message color=\"#c0392b\" text={error} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from 'api';\r\nimport React, { Component } from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\n\r\nclass DetailContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes('/movie/'),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      history: { push },\r\n      match: {\r\n        params: { id },\r\n      },\r\n    } = this.props;\r\n    const { isMovie } = this.state;\r\n    const parsedId = parseInt(id);\r\n    if (isNaN(parsedId)) {\r\n      return push('/');\r\n    }\r\n    let result = null;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything.\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { result, error, loading } = this.state;\r\n\r\n    return <DetailPresenter result={result} error={error} loading={loading} />;\r\n  }\r\n}\r\n\r\nexport default DetailContainer;\r\n","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst SHeader = styled.header`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  background-color: rgba(20, 20, 20, 1);\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n  z-index: 10;\r\n`;\r\n\r\nconst NavList = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst NavItem = styled.li``;\r\n\r\nconst SLink = styled(Link)`\r\n  display: inline-block;\r\n  width: 110px;\r\n  border-bottom: 2px solid ${(props) => (props.$current ? '#3498db' : 'transparent')};\r\n  line-height: 50px;\r\n  text-align: center;\r\n  transition: border-bottom 0.5s;\r\n`;\r\n\r\nconst Header = ({ location: { pathname } }) => {\r\n  return (\r\n    <SHeader>\r\n      <NavList>\r\n        <NavItem>\r\n          <SLink to=\"/\" $current={pathname === '/'}>\r\n            Movies\r\n          </SLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <SLink to=\"/tv\" $current={pathname === '/tv'}>\r\n            TV\r\n          </SLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <SLink to=\"/search\" $current={pathname === '/search'}>\r\n            Search\r\n          </SLink>\r\n        </NavItem>\r\n      </NavList>\r\n    </SHeader>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import React from 'react';\r\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\r\nimport Home from 'Routes/Home';\r\nimport Search from 'Routes/Search';\r\nimport Tv from 'Routes/TV';\r\nimport Detail from 'Routes/Detail';\r\nimport Header from './Header';\r\n\r\nconst Router = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/search\" component={Search} />\r\n        <Route path=\"/tv\" component={Tv} />\r\n        <Route path=\"/movie/:id\" component={Detail} />\r\n        <Route path=\"/show/:id\" component={Detail} />\r\n        <Redirect from=\"*\" to=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { reset } from 'styled-reset';\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset}\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    background-color: rgba(20, 20, 20, 1);\r\n    color: #fff;\r\n    font-family: ---apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;\r\n","import React from 'react';\r\nimport Router from 'Components/Router';\r\nimport GlobalStyles from 'Components/GlobalStyles';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyles />\r\n      <Router />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import App from 'Components/App';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}